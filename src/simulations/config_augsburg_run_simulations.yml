## Synthetic population pipeline for Munich
## based on the synpp package

# This is the path to a directory where the pipeline can store temporary data
working_directory: ../../data/city_specific/augsburg/cache

run:
  - matsim.output

# Here the configuraiton of the pipeline starts
config:
  # Some general configuration
  processes: 1

  # Define whether to use ENTD or EGT as the household travel survey (HTS)
  hts: entd

  # Define sampling rate and random seed for the output population
  sampling_rate: 0.01
  random_seed: 1234
 
  # Paths to the input data and where the output should be stored
  data_path: augsburg/data
  output_path: ../../data/city_specific/augsburg/output
  output_prefix: augsburg_
  osm_path_bavaria: osm/bayern-latest.osm.pbf 
  osmosis_binary: /opt/homebrew/bin/osmosis
  osmconvert_binary: augsburg/data/osm/osmconvert

  # Only interesting if you run the simulation
  java_memory: 12G

  # Defaults for Munich
  home_location_sampling: weighted
  mode_choice: false
  matching_attributes: ["sex", "age_class", "has_license"]

  gtfs_path: gtfs # this is correct here.
  osm_path: osm # this is correct here.

# Overrides for the Munich pipeline compared to the ÃŽle-de-France pipeline
aliases:
  data.census.filtered:  augsburg.ipf.attributed
  synthesis.population.income.selected: augsburg.income
  synthesis.population.spatial.home.zones: augsburg.homes
  synthesis.locations.home.locations: augsburg.locations.home
  synthesis.locations.education: augsburg.locations.education
  synthesis.locations.secondary: augsburg.locations.secondary
  synthesis.locations.work: augsburg.locations.work
  data.od.weighted: augsburg.gravity.model
  data.spatial.iris: augsburg.data.spatial.iris
  data.spatial.codes: augsburg.entd_codes
  synthesis.population.spatial.primary.locations: augsburg.locations.synthesis.replacement
  synthesis.population.enriched: augsburg.synthesis.population.enriched
  matsim.simulation.prepare: augsburg.matsim.simulation.prepare

