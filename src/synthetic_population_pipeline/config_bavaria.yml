## Synthetic population pipeline for Munich
## based on the synpp package

run_synthesis: true

# This is the path to a directory where the pipeline can store temporary data
working_directory: bavaria/cache

run:
  - synthesis.output

# Here the configuraiton of the pipeline starts
config:
  # Some general configuration
  processes: 32

  # Define whether to use ENTD or EGT as the household travel survey (HTS)
  hts: entd

  # Define sampling rate and random seed for the output population
  sampling_rate: 0.1
  random_seed: 1234
 
  # Paths to the input data and where the output should be stored
  data_path: bavaria/data
  output_path: bavaria/output
  output_prefix: bavaria_
  osm_path_bavaria: osm/bayern-latest.osm.pbf 
  osmosis_binary: /opt/homebrew/bin/osmosis
  osmconvert_binary: bavaria/data/osm/osmconvert

  # Only interesting if you run the simulation
  # java_memory: 12G

  # Defaults for Munich
  home_location_sampling: weighted
  mode_choice: false
  matching_attributes: ["sex", "age_class", "has_license"]

  gtfs_path: bavaria/data/gtfs # commented out for run simulation, not for synthesis
  osm_path: bavaria/data/osm # commented out for run simulation, not for synthesis

# Overrides for the Munich pipeline compared to the ÃŽle-de-France pipeline
aliases:
  data.census.filtered: bavaria.ipf.attributed
  synthesis.population.income.selected: bavaria.income
  synthesis.population.spatial.home.zones: bavaria.homes
  synthesis.locations.home.locations: bavaria.locations.home
  synthesis.locations.education: bavaria.locations.education
  synthesis.locations.secondary: bavaria.locations.secondary
  synthesis.locations.work: bavaria.locations.work
  data.od.weighted: bavaria.gravity.model
  data.spatial.iris: bavaria.data.spatial.iris
  data.spatial.codes: bavaria.entd_codes
  synthesis.population.spatial.primary.locations: bavaria.locations.synthesis.replacement
  synthesis.population.enriched: bavaria.synthesis.population.enriched
  matsim.simulation.prepare: bavaria.matsim.simulation.prepare
